name: Default Workflow

on:
  push:
    branches: [develop, main]
  pull_request:
    # branches: [develop, main]
  workflow_dispatch:
jobs:
  BuildCi:
    name: Build CI job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - name: Use Node.js 14
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache # use this to check for `cache-hit` (`steps.node-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ubuntu-latest-node-modules-14-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build, Lint affected apps
        uses: mansagroup/nrwl-nx-action@v2.0.3
        with:
          targets: build,lint
          affected: 'true'

  BuildArtifacts:
    needs: [BuildCi]
    name: Build Artifacts job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ['myapp', 'testapp']
    env:
      APP_ID: ${{ matrix.app }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - name: Use Node 14
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache # use this to check for `cache-hit` (`steps.node-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ubuntu-latest-node-modules-14-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build app (${{ env.APP_ID }})
        run: npm run build --${{ env.APP_ID }} --configuration=production

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  Release:
    needs: [BuildArtifacts]
    name: Release job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts

  Finalize:
    needs: [BuildArtifacts, Release]
    name: Finalize job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts
