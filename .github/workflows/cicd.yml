name: Default Workflow

on:
  push:
    branches: [develop, main]
  pull_request:
    # branches: [develop, main]
  workflow_dispatch:
jobs:
  Setup:
    name: Setup job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - name: Use Node.js 14
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache # use this to check for `cache-hit` (`steps.node-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ubuntu-latest-node-modules-14-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lint apps
        uses: mansagroup/nrwl-nx-action@v2.0.3
        with:
          targets: lint
          affected: 'true'

  Build:
    name: Build job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ['myapp']
        skip_lint: [false]
        include:
          - app: 'myapp2'
            skip_lint: true
    env:
      APP_NAME: ${{ matrix.app }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - name: Use Node.js 14
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache # use this to check for `cache-hit` (`steps.node-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ubuntu-latest-node-modules-14-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Skip lint for ${{ env.APP_NAME }}
        run: echo ${{ matrix.skip_lint }}

      - name: Lint apps
        uses: mansagroup/nrwl-nx-action@v2.0.3
        with:
          projects: ${{ env.APP_NAME }}
          targets: lint
          affected: 'true'

      - name: nop for app ${{ env.APP_NAME }}
        run: echo "no operation (nop)"

      - name: output file ${{ env.APP_NAME }}
        run: |
          mkdir artifacts
          echo test > artifacts/${{ env.APP_NAME }}.md

      - name: ls
        run: ls -al

      - name: Archive artifact
        if: 'true == false'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.APP_NAME }}
          path: artifacts

  Finalize:
    needs: [Build]
    if: 'true == false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts
