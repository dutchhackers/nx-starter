name: Nightly Build

on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  workflow_dispatch:

jobs:
  Build:
    name: Nightly integration build

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [12, 14]
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache # use this to check for `cache-hit` (`steps.node-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-modules-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          CI: true

      - name: Build artifact
        run: npm run build -- --configuration=production

      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: dist

  PostBuild:
    name: CodeQL Scanning
    needs: [Build]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö https://git.io/JvXDl

      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  # notify_on_failure:
  #   needs: [nighlty]

  #   if: failure()

  #   name: Slack Notify

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Slack Notification
  #       uses: rtCamp/action-slack-notify@master
  #       env:
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  #         SLACK_CHANNEL: _log
  #         SLACK_USERNAME: 'Nx Starter Bot'
  #         SLACK_ICON_EMOJI: 'rabo-algemeen-godzilla'
  #         SLACK_COLOR: 'danger'
  #         SLACK_TITLE: 'The nightly build is failing :warning:'
  #         SLACK_FOOTER: ':squirrel:'
  #         MSG_MINIMAL: true
# Docs / info
# Used actions:
# - https://github.com/marketplace/actions/slack-notify
